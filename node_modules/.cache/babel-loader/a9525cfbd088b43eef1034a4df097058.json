{"remainingRequest":"D:\\we_sub\\gf-vue-admin\\web\\node_modules\\_babel-loader@8.1.0@babel-loader\\lib\\index.js!D:\\we_sub\\gf-vue-admin\\web\\node_modules\\_eslint-loader@2.2.1@eslint-loader\\index.js??ref--13-0!D:\\we_sub\\gf-vue-admin\\web\\src\\store\\module\\dictionary.js","dependencies":[{"path":"D:\\we_sub\\gf-vue-admin\\web\\src\\store\\module\\dictionary.js","mtime":1599721582945},{"path":"D:\\we_sub\\gf-vue-admin\\web\\node_modules\\_cache-loader@4.1.0@cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\we_sub\\gf-vue-admin\\web\\node_modules\\_babel-loader@8.1.0@babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\we_sub\\gf-vue-admin\\web\\node_modules\\_eslint-loader@2.2.1@eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkubWFwIjsKaW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiRDovd2Vfc3ViL2dmLXZ1ZS1hZG1pbi93ZWIvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IiOwppbXBvcnQgX29iamVjdFNwcmVhZCBmcm9tICJEOi93ZV9zdWIvZ2YtdnVlLWFkbWluL3dlYi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0U3ByZWFkMiI7CmltcG9ydCB7IGZpbmRTeXNEaWN0aW9uYXJ5IH0gZnJvbSAnQC9hcGkvc3lzRGljdGlvbmFyeSc7CmV4cG9ydCB2YXIgZGljdGlvbmFyeSA9IHsKICBuYW1lc3BhY2VkOiB0cnVlLAogIHN0YXRlOiB7CiAgICBkaWN0aW9uYXJ5TWFwOiB7fQogIH0sCiAgbXV0YXRpb25zOiB7CiAgICBzZXREaWN0aW9uYXJ5TWFwOiBmdW5jdGlvbiBzZXREaWN0aW9uYXJ5TWFwKHN0YXRlLCBkaWN0aW9uYXJ5TWFwKSB7CiAgICAgIHN0YXRlLmRpY3Rpb25hcnlNYXAgPSBfb2JqZWN0U3ByZWFkKF9vYmplY3RTcHJlYWQoe30sIHN0YXRlLmRpY3Rpb25hcnlNYXApLCBkaWN0aW9uYXJ5TWFwKTsKICAgIH0KICB9LAogIGFjdGlvbnM6IHsKICAgIC8vIOS7juWQjuWPsOiOt+WPluWKqOaAgei3r+eUsQogICAgZ2V0RGljdGlvbmFyeTogZnVuY3Rpb24gZ2V0RGljdGlvbmFyeShfcmVmLCB0eXBlKSB7CiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUoKSB7CiAgICAgICAgdmFyIGNvbW1pdCwgc3RhdGUsIHJlcywgZGljdGlvbmFyeU1hcCwgZGljdDsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBjb21taXQgPSBfcmVmLmNvbW1pdCwgc3RhdGUgPSBfcmVmLnN0YXRlOwoKICAgICAgICAgICAgICAgIGlmICghc3RhdGUuZGljdGlvbmFyeU1hcFt0eXBlXSkgewogICAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gNTsKICAgICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LmFicnVwdCgicmV0dXJuIiwgc3RhdGUuZGljdGlvbmFyeU1hcFt0eXBlXSk7CgogICAgICAgICAgICAgIGNhc2UgNToKICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSA3OwogICAgICAgICAgICAgICAgcmV0dXJuIGZpbmRTeXNEaWN0aW9uYXJ5KHsKICAgICAgICAgICAgICAgICAgdHlwZTogdHlwZQogICAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAgIGNhc2UgNzoKICAgICAgICAgICAgICAgIHJlcyA9IF9jb250ZXh0LnNlbnQ7CgogICAgICAgICAgICAgICAgaWYgKCEocmVzLmNvZGUgPT0gMCkpIHsKICAgICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDE1OwogICAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICBkaWN0aW9uYXJ5TWFwID0ge307CiAgICAgICAgICAgICAgICBkaWN0ID0gW107CiAgICAgICAgICAgICAgICByZXMuZGF0YS5yZXN5c0RpY3Rpb25hcnkuc3lzRGljdGlvbmFyeURldGFpbHMgJiYgcmVzLmRhdGEucmVzeXNEaWN0aW9uYXJ5LnN5c0RpY3Rpb25hcnlEZXRhaWxzLm1hcChmdW5jdGlvbiAoaXRlbSkgewogICAgICAgICAgICAgICAgICBkaWN0LnB1c2goewogICAgICAgICAgICAgICAgICAgIGxhYmVsOiBpdGVtLmxhYmVsLAogICAgICAgICAgICAgICAgICAgIHZhbHVlOiBpdGVtLnZhbHVlCiAgICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICBkaWN0aW9uYXJ5TWFwW3Jlcy5kYXRhLnJlc3lzRGljdGlvbmFyeS50eXBlXSA9IGRpY3Q7CiAgICAgICAgICAgICAgICBjb21taXQoInNldERpY3Rpb25hcnlNYXAiLCBkaWN0aW9uYXJ5TWFwKTsKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5hYnJ1cHQoInJldHVybiIsIHN0YXRlLmRpY3Rpb25hcnlNYXBbdHlwZV0pOwoKICAgICAgICAgICAgICBjYXNlIDE1OgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZSk7CiAgICAgIH0pKSgpOwogICAgfQogIH0sCiAgZ2V0dGVyczogewogICAgZ2V0RGljdGlvbmFyeTogZnVuY3Rpb24gZ2V0RGljdGlvbmFyeShzdGF0ZSkgewogICAgICByZXR1cm4gc3RhdGUuZGljdGlvbmFyeU1hcDsKICAgIH0KICB9Cn07"},{"version":3,"sources":["D:/we_sub/gf-vue-admin/web/src/store/module/dictionary.js"],"names":["findSysDictionary","dictionary","namespaced","state","dictionaryMap","mutations","setDictionaryMap","actions","getDictionary","type","commit","res","code","dict","data","resysDictionary","sysDictionaryDetails","map","item","push","label","value","getters"],"mappings":";;;;AAAA,SAASA,iBAAT,QAAkC,qBAAlC;AAEA,OAAO,IAAMC,UAAU,GAAG;AACtBC,EAAAA,UAAU,EAAE,IADU;AAEtBC,EAAAA,KAAK,EAAE;AACHC,IAAAA,aAAa,EAAE;AADZ,GAFe;AAKtBC,EAAAA,SAAS,EAAE;AACPC,IAAAA,gBADO,4BACUH,KADV,EACiBC,aADjB,EACgC;AACnCD,MAAAA,KAAK,CAACC,aAAN,mCAA2BD,KAAK,CAACC,aAAjC,GAAmDA,aAAnD;AACH;AAHM,GALW;AAWtBG,EAAAA,OAAO,EAAE;AACL;AACMC,IAAAA,aAFD,+BAEkCC,IAFlC,EAEwC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAvBC,gBAAAA,MAAuB,QAAvBA,MAAuB,EAAfP,KAAe,QAAfA,KAAe;;AAAA,qBACrCA,KAAK,CAACC,aAAN,CAAoBK,IAApB,CADqC;AAAA;AAAA;AAAA;;AAAA,iDAE9BN,KAAK,CAACC,aAAN,CAAoBK,IAApB,CAF8B;;AAAA;AAAA;AAAA,uBAInBT,iBAAiB,CAAC;AAAES,kBAAAA,IAAI,EAAJA;AAAF,iBAAD,CAJE;;AAAA;AAI/BE,gBAAAA,GAJ+B;;AAAA,sBAKjCA,GAAG,CAACC,IAAJ,IAAY,CALqB;AAAA;AAAA;AAAA;;AAM3BR,gBAAAA,aAN2B,GAMX,EANW;AAO3BS,gBAAAA,IAP2B,GAOpB,EAPoB;AAQjCF,gBAAAA,GAAG,CAACG,IAAJ,CAASC,eAAT,CAAyBC,oBAAzB,IAAiDL,GAAG,CAACG,IAAJ,CAASC,eAAT,CAAyBC,oBAAzB,CAA8CC,GAA9C,CAAkD,UAAAC,IAAI,EAAI;AACvGL,kBAAAA,IAAI,CAACM,IAAL,CAAU;AACNC,oBAAAA,KAAK,EAAEF,IAAI,CAACE,KADN;AAENC,oBAAAA,KAAK,EAAEH,IAAI,CAACG;AAFN,mBAAV;AAIH,iBALgD,CAAjD;AAMAjB,gBAAAA,aAAa,CAACO,GAAG,CAACG,IAAJ,CAASC,eAAT,CAAyBN,IAA1B,CAAb,GAA+CI,IAA/C;AACAH,gBAAAA,MAAM,CAAC,kBAAD,EAAqBN,aAArB,CAAN;AAfiC,iDAgB1BD,KAAK,CAACC,aAAN,CAAoBK,IAApB,CAhB0B;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAmB5C;AArBI,GAXa;AAkCtBa,EAAAA,OAAO,EAAC;AACJd,IAAAA,aADI,yBACUL,KADV,EACgB;AAChB,aAAOA,KAAK,CAACC,aAAb;AACH;AAHG;AAlCc,CAAnB","sourcesContent":["import { findSysDictionary } from '@/api/sysDictionary'\r\n\r\nexport const dictionary = {\r\n    namespaced: true,\r\n    state: {\r\n        dictionaryMap: {},\r\n    },\r\n    mutations: {\r\n        setDictionaryMap(state, dictionaryMap) {\r\n            state.dictionaryMap = { ...state.dictionaryMap, ...dictionaryMap }\r\n        },\r\n\r\n    },\r\n    actions: {\r\n        // 从后台获取动态路由\r\n        async getDictionary({ commit, state }, type) {\r\n            if (state.dictionaryMap[type]) {\r\n                return state.dictionaryMap[type]\r\n            } else {\r\n                const res = await findSysDictionary({ type })\r\n                if (res.code == 0) {\r\n                    const dictionaryMap = {}\r\n                    const dict = []\r\n                    res.data.resysDictionary.sysDictionaryDetails && res.data.resysDictionary.sysDictionaryDetails.map(item => {\r\n                        dict.push({\r\n                            label: item.label,\r\n                            value: item.value\r\n                        })\r\n                    })\r\n                    dictionaryMap[res.data.resysDictionary.type] = dict\r\n                    commit(\"setDictionaryMap\", dictionaryMap)\r\n                    return state.dictionaryMap[type]\r\n                }\r\n            }\r\n        }\r\n    },\r\n    getters:{\r\n        getDictionary(state){\r\n            return state.dictionaryMap\r\n        }\r\n    }\r\n}"]}]}