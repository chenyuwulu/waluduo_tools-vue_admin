{"remainingRequest":"D:\\we_sub\\gf-vue-admin\\web\\node_modules\\_vue-loader@15.9.3@vue-loader\\lib\\index.js??vue-loader-options!D:\\we_sub\\gf-vue-admin\\web\\src\\view\\superAdmin\\api\\api.vue?vue&type=style&index=0&id=1ed9dbea&scoped=true&lang=scss&","dependencies":[{"path":"D:\\we_sub\\gf-vue-admin\\web\\src\\view\\superAdmin\\api\\api.vue","mtime":1599721582969},{"path":"D:\\we_sub\\gf-vue-admin\\web\\node_modules\\_css-loader@3.6.0@css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\we_sub\\gf-vue-admin\\web\\node_modules\\_vue-loader@15.9.3@vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"D:\\we_sub\\gf-vue-admin\\web\\node_modules\\_postcss-loader@3.0.0@postcss-loader\\src\\index.js","mtime":499162500000},{"path":"D:\\we_sub\\gf-vue-admin\\web\\node_modules\\_sass-loader@8.0.2@sass-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\we_sub\\gf-vue-admin\\web\\node_modules\\_cache-loader@4.1.0@cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\we_sub\\gf-vue-admin\\web\\node_modules\\_vue-loader@15.9.3@vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoNCi5idXR0b24tYm94IHsNCiAgcGFkZGluZzogMTBweCAyMHB4Ow0KICAuZWwtYnV0dG9uIHsNCiAgICBmbG9hdDogcmlnaHQ7DQogIH0NCn0NCi5lbC10YWctLW1pbmkgew0KICBtYXJnaW4tbGVmdDogNXB4Ow0KfQ0KLndhcm5pbmcgew0KICBjb2xvcjogI2RjMTQzYzsNCn0NCg=="},{"version":3,"sources":["api.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4SA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"api.vue","sourceRoot":"src/view/superAdmin/api","sourcesContent":["<template>\r\n  <div>\r\n    <div class=\"search-term\">\r\n      <el-form :inline=\"true\" :model=\"searchInfo\" class=\"demo-form-inline\">\r\n        <el-form-item label=\"路径\">\r\n          <el-input placeholder=\"路径\" v-model=\"searchInfo.path\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"描述\">\r\n          <el-input placeholder=\"描述\" v-model=\"searchInfo.description\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"api组\">\r\n          <el-input placeholder=\"api组\" v-model=\"searchInfo.apiGroup\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"请求\">\r\n          <el-select clearable placeholder=\"请选择\" v-model=\"searchInfo.method\">\r\n            <el-option\r\n              :key=\"item.value\"\r\n              :label=\"`${item.label}(${item.value})`\"\r\n              :value=\"item.value\"\r\n              v-for=\"item in methodOptions\"\r\n            ></el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item>\r\n          <el-button @click=\"onSubmit\" type=\"primary\">查询</el-button>\r\n        </el-form-item>\r\n        <el-form-item>\r\n          <el-button @click=\"openDialog('addApi')\" type=\"primary\">新增api</el-button>\r\n        </el-form-item>\r\n      </el-form>\r\n    </div>\r\n    <el-table :data=\"tableData\" @sort-change=\"sortChange\" border stripe>\r\n      <el-table-column label=\"id\" min-width=\"60\" prop=\"ID\" sortable=\"custom\"></el-table-column>\r\n      <el-table-column label=\"api路径\" min-width=\"150\" prop=\"path\" sortable=\"custom\"></el-table-column>\r\n      <el-table-column label=\"api分组\" min-width=\"150\" prop=\"apiGroup\" sortable=\"custom\"></el-table-column>\r\n      <el-table-column label=\"api简介\" min-width=\"150\" prop=\"description\" sortable=\"custom\"></el-table-column>\r\n      <el-table-column label=\"请求\" min-width=\"150\" prop=\"method\" sortable=\"custom\">\r\n        <template slot-scope=\"scope\">\r\n          <div>\r\n            {{scope.row.method}}\r\n            <el-tag\r\n              :key=\"scope.row.methodFiletr\"\r\n              :type=\"scope.row.method|tagTypeFiletr\"\r\n              effect=\"dark\"\r\n              size=\"mini\"\r\n            >{{scope.row.method|methodFiletr}}</el-tag>\r\n            <!-- {{scope.row.method|methodFiletr}} -->\r\n          </div>\r\n        </template>\r\n      </el-table-column>\r\n\r\n      <el-table-column fixed=\"right\" label=\"操作\" width=\"200\">\r\n        <template slot-scope=\"scope\">\r\n          <el-button @click=\"editApi(scope.row)\" size=\"small\" type=\"primary\" icon=\"el-icon-edit\">编辑</el-button>\r\n          <el-button @click=\"deleteApi(scope.row)\" size=\"small\" type=\"danger\" icon=\"el-icon-delete\">删除</el-button>\r\n        </template>\r\n      </el-table-column>\r\n    </el-table>\r\n    <el-pagination\r\n      :current-page=\"page\"\r\n      :page-size=\"pageSize\"\r\n      :page-sizes=\"[10, 30, 50, 100]\"\r\n      :style=\"{float:'right',padding:'20px'}\"\r\n      :total=\"total\"\r\n      @current-change=\"handleCurrentChange\"\r\n      @size-change=\"handleSizeChange\"\r\n      layout=\"total, sizes, prev, pager, next, jumper\"\r\n    ></el-pagination>\r\n\r\n    <el-dialog :before-close=\"closeDialog\" :title=\"dialogTitle\" :visible.sync=\"dialogFormVisible\">\r\n      <el-form :inline=\"true\" :model=\"form\" :rules=\"rules\" label-width=\"80px\" ref=\"apiForm\">\r\n        <el-form-item label=\"路径\" prop=\"path\">\r\n          <el-input autocomplete=\"off\" v-model=\"form.path\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"请求\" prop=\"method\">\r\n          <el-select placeholder=\"请选择\" v-model=\"form.method\">\r\n            <el-option\r\n              :key=\"item.value\"\r\n              :label=\"`${item.label}(${item.value})`\"\r\n              :value=\"item.value\"\r\n              v-for=\"item in methodOptions\"\r\n            ></el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item label=\"api分组\" prop=\"apiGroup\">\r\n          <el-input autocomplete=\"off\" v-model=\"form.apiGroup\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"api简介\" prop=\"description\">\r\n          <el-input autocomplete=\"off\" v-model=\"form.description\"></el-input>\r\n        </el-form-item>\r\n      </el-form>\r\n      <div class=\"warning\">新增Api需要在角色管理内配置权限才可使用</div>\r\n      <div class=\"dialog-footer\" slot=\"footer\">\r\n        <el-button @click=\"closeDialog\">取 消</el-button>\r\n        <el-button @click=\"enterDialog\" type=\"primary\">确 定</el-button>\r\n      </div>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n\r\n<script>\r\n// 获取列表内容封装在mixins内部  getTableData方法 初始化已封装完成 条件搜索时候 请把条件安好后台定制的结构体字段 放到 this.searchInfo 中即可实现条件搜索\r\n\r\nimport {\r\n  getApiById,\r\n  getApiList,\r\n  createApi,\r\n  updateApi,\r\n  deleteApi\r\n} from '@/api/api'\r\nimport infoList from '@/components/mixins/infoList'\r\nimport { toSQLLine } from '@/utils/stringFun'\r\nconst methodOptions = [\r\n  {\r\n    value: 'POST',\r\n    label: '创建',\r\n    type: 'success'\r\n  },\r\n  {\r\n    value: 'GET',\r\n    label: '查看',\r\n    type: ''\r\n  },\r\n  {\r\n    value: 'PUT',\r\n    label: '更新',\r\n    type: 'warning'\r\n  },\r\n  {\r\n    value: 'DELETE',\r\n    label: '删除',\r\n    type: 'danger'\r\n  }\r\n]\r\n\r\nexport default {\r\n  name: 'Api',\r\n  mixins: [infoList],\r\n  data() {\r\n    return {\r\n      listApi: getApiList,\r\n      dialogFormVisible: false,\r\n      dialogTitle: '新增Api',\r\n      form: {\r\n        path: '',\r\n        apiGroup: '',\r\n        method: '',\r\n        description: ''\r\n      },\r\n      methodOptions: methodOptions,\r\n      type: '',\r\n      rules: {\r\n        path: [{ required: true, message: '请输入api路径', trigger: 'blur' }],\r\n        apiGroup: [\r\n          { required: true, message: '请输入组名称', trigger: 'blur' }\r\n        ],\r\n        method: [\r\n          { required: true, message: '请选择请求方式', trigger: 'blur' }\r\n        ],\r\n        description: [\r\n          { required: true, message: '请输入api介绍', trigger: 'blur' }\r\n        ]\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    // 排序\r\n    sortChange({ prop, order }) {\r\n      if (prop) {\r\n        this.searchInfo.orderKey = toSQLLine(prop)\r\n        this.searchInfo.desc = order == 'descending'\r\n      }\r\n      this.getTableData()\r\n    },\r\n    //条件搜索前端看此方法\r\n    onSubmit() {\r\n      this.page = 1\r\n      this.pageSize = 10\r\n      this.getTableData()\r\n    },\r\n    initForm() {\r\n      this.$refs.apiForm.resetFields()\r\n      this.form= {\r\n        path: '',\r\n        apiGroup: '',\r\n        method: '',\r\n        description: ''\r\n      }\r\n    },\r\n    closeDialog() {\r\n      this.initForm()\r\n      this.dialogFormVisible = false\r\n    },\r\n    openDialog(type) {\r\n      switch (type) {\r\n        case 'addApi':\r\n          this.dialogTitlethis = '新增Api'\r\n          break\r\n        case 'edit':\r\n          this.dialogTitlethis = '编辑Api'\r\n          break\r\n        default:\r\n          break\r\n      }\r\n      this.type = type\r\n      this.dialogFormVisible = true\r\n    },\r\n    async editApi(row) {\r\n      const res = await getApiById({ id: row.ID })\r\n      this.form = res.data.api\r\n      this.openDialog('edit')\r\n    },\r\n    async deleteApi(row) {\r\n      this.$confirm('此操作将永久删除所有角色下该菜单, 是否继续?', '提示', {\r\n        confirmButtonText: '确定',\r\n        cancelButtonText: '取消',\r\n        type: 'warning'\r\n      })\r\n        .then(async () => {\r\n          const res = await deleteApi(row)\r\n          if (res.code == 0) {\r\n            this.$message({\r\n              type: 'success',\r\n              message: '删除成功!'\r\n            })\r\n            this.getTableData()\r\n          }\r\n        })\r\n        .catch(() => {\r\n          this.$message({\r\n            type: 'info',\r\n            message: '已取消删除'\r\n          })\r\n        })\r\n    },\r\n    async enterDialog() {\r\n      this.$refs.apiForm.validate(async valid => {\r\n        if (valid) {\r\n          switch (this.type) {\r\n            case 'addApi':\r\n              {\r\n                const res = await createApi(this.form)\r\n                if (res.code == 0) {\r\n                  this.$message({\r\n                    type: 'success',\r\n                    message: '添加成功',\r\n                    showClose: true\r\n                  })\r\n                }\r\n                this.getTableData()\r\n                this.closeDialog()\r\n              }\r\n\r\n              break\r\n            case 'edit':\r\n              {\r\n                const res = await updateApi(this.form)\r\n                if (res.code == 0) {\r\n                  this.$message({\r\n                    type: 'success',\r\n                    message: '编辑成功',\r\n                    showClose: true\r\n                  })\r\n                }\r\n                this.getTableData()\r\n                this.closeDialog()\r\n              }\r\n              break\r\n            default:\r\n              {\r\n                this.$message({\r\n                  type: 'error',\r\n                  message: '未知操作',\r\n                  showClose: true\r\n                })\r\n              }\r\n              break\r\n          }\r\n        }\r\n      })\r\n    }\r\n  },\r\n  filters: {\r\n    methodFiletr(value) {\r\n      const target = methodOptions.filter(item => item.value === value)[0]\r\n      // return target && `${target.label}(${target.value})`\r\n      return target && `${target.label}`\r\n    },\r\n    tagTypeFiletr(value) {\r\n      const target = methodOptions.filter(item => item.value === value)[0]\r\n      return target && `${target.type}`\r\n    }\r\n  },\r\n  created(){\r\n    this.getTableData()\r\n  }\r\n}\r\n</script>\r\n<style scoped lang=\"scss\">\r\n.button-box {\r\n  padding: 10px 20px;\r\n  .el-button {\r\n    float: right;\r\n  }\r\n}\r\n.el-tag--mini {\r\n  margin-left: 5px;\r\n}\r\n.warning {\r\n  color: #dc143c;\r\n}\r\n</style>"]}]}